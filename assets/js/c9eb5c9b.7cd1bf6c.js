"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7011],{91187:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>n,metadata:()=>a,toc:()=>l});var s=r(85893),i=r(11151);const n={slug:"rerun",title:"Rerun",authors:["jess"],tags:["vex","software","open source","starstruck"]},o=void 0,a={permalink:"/projects/rerun",source:"@site/projects/2017-03-12-rerun/index.md",title:"Rerun",description:"Rerun allows you to record robot movements and play them back during autonomous.",date:"2017-03-12T00:00:00.000Z",formattedDate:"March 12, 2017",tags:[{label:"vex",permalink:"/projects/tags/vex"},{label:"software",permalink:"/projects/tags/software"},{label:"open source",permalink:"/projects/tags/open-source"},{label:"starstruck",permalink:"/projects/tags/starstruck"}],readingTime:1.46,hasTruncateMarker:!0,authors:[{name:"Jess Zarchi",title:"Roboticist",url:"https://roboticsisez.com",imageURL:"https://github.com/Unionjackjz1.png",key:"jess"}],frontMatter:{slug:"rerun",title:"Rerun",authors:["jess"],tags:["vex","software","open source","starstruck"]},unlisted:!1,prevItem:{title:"In the Zone - Geoffrey",permalink:"/projects/geoffrey"},nextItem:{title:"Minecraft Plugin - Core",permalink:"/projects/minecraft-plugin-core"}},c={authorsImageUrls:[void 0]},l=[];function h(e){const t={a:"a",code:"code",img:"img",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.a,{href:"https://github.com/Unionjackjz1/ROBO-DANNY/blob/master/RerunFunctions.c",children:"Rerun"})," allows you to record robot movements and play them back during autonomous."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:r(91888).Z+"",width:"1280",height:"720"})}),"\n",(0,s.jsx)(t.p,{children:"Rerun works by tracking the velocities of all motors on the robot and running a velocity controller during autonomous to match those velocities.  The biggest problem with this code is it cannot react to changes in the robot, such as different banding or friction on a mechanism.  This version of the code is best used soon after the recording is made to ensure little to no changes to the robot."}),"\n",(0,s.jsx)(t.p,{children:"While recording, the code would print to the terminal in a format that could be copied/pasted back into the code for running autonomously."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:'task\r\nrecord( ) {\r\n    startTask( calculateRPMs );\r\n    int j = 20, s = 1;\r\n    for( int i = 0; i < 400; i++ ) {\r\n        if( j == 20 ) {\r\n            writeDebugStream( "\\n" );\r\n            writeDebugStream( "\\n   /* %i Second(s) */", s );\r\n            s++;\r\n            j = 0;\r\n        }\r\n        j++;\r\n\r\n        writeDebugStream( "\\n   auton( %i, %i, %i, %i, %i, %i, %i, %i);", iArmCurrentRPM, motor[ arm_l1 ], iChassisLeftRPM, motor[ chassis_l ], iChassisRightRPM, motor[ chassis_r ], iClawRPM, motor[ intake_l ] );\r\n\r\n        delay( 50 );\r\n    }\r\n    stopTask( calculateRPMs );\r\n    writeDebugStream( "\\n\\n /* Stop the robot */\\n  auton( 0, 0, 0, 0, 0, 0, %i, %i );", iClawRPM, motor[ intake_l ] );\r\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:["Playing the recorded run back uses a velocity controller.  The velocity controller is a P loop that ",(0,s.jsx)(t.code,{children:"+="})," to the motor.  This means if the motor is behind a bit, the motor will get a kick to get up to speed.  This is more accurate than setting the same PWM signal to the motors because it ensures at least the velocities are the same."]}),"\n",(0,s.jsx)(t.p,{children:"The drivetrain used a modified version of this system.  I kept track of the PWM signal being sent to the drive as well, so the velocity controller used the recorded PWM signal as a starting point and modified it from there."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"void\r\nauton( int iArmDes, int iArmSpeed, int iChassisLeftDes, int iChassisLeftSpeed, int iChassisRightDes, int iChassisRightSpeed, int iClawDes, int iClawSpeed ) {\r\n    int iArmError = 0, iChassisLeftError = 0, iChassisRightError = 0, iClawError = 0;\r\n    for( int i = 0; i < 50; i++ ) {\r\n        iArmError          -= (iArmDes - iArmCurrentRPM) * 0.015;\r\n        iChassisLeftError  -= (iChassisLeftDes - iChassisLeftRPM) * 0.01;\r\n        iChassisRightError -= (iChassisRightDes - iChassisRightRPM) * 0.01;\r\n        iClawError         -= (iClawDes - iClawRPM) * 0.01;\r\n\r\n        arm( iArmError + iArmSpeed );\r\n        motor[ intake_l ] =\r\n        motor[ intake_r ] = (iClawError + iClawSpeed );\r\n\r\n        if( !bSide )\r\n            tankWithoutTrueSpeed( iChassisLeftError + iChassisLeftSpeed, iChassisRightError + iChassisRightSpeed );\r\n        else\r\n            tankWithoutTrueSpeed( iChassisRightError + iChassisRightSpeed, iChassisLeftError + iChassisLeftSpeed );\r\n\r\n        delay( 1 );\r\n    }\r\n}\n"})})]})}function u(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},91888:(e,t,r)=>{r.d(t,{Z:()=>s});const s=r.p+"assets/images/banner-a097916f4eafffdaca2c05f5f2e7008c.gif"},11151:(e,t,r)=>{r.d(t,{Z:()=>a,a:()=>o});var s=r(67294);const i={},n=s.createContext(i);function o(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);